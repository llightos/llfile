Index: model/folder.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/model/folder.go b/model/folder.go
--- a/model/folder.go	
+++ b/model/folder.go	(date 1658024864732)
@@ -61,14 +61,12 @@
 	return nil
 }
 
-// AddUserFolder 完成添加文件夹的功能，先通过file
-func (d *DB) AddUserFolder(folderID uint, newFolderName string) error {
+func (d *DB) AddUserFolder(folderID uint, file File) error {
 	folder := new(Folder)
-	//拿到此文件夹的信息和其子一级ChildF的信息
-	db.Preload("ChildF").Where("id = ?", folderID).First(folder)
+	db.Model(&Folder{}).Where("id = ?", folderID).First(folder)
 
-	folder.ChildF = append(folder.ChildF, Folder{
-		Name: newFolderName,
+	folder.Files = append(folder.Files, UserFile{
+		File: file,
 	})
 	err := db.Session(&gorm.Session{FullSaveAssociations: true}).Updates(folder).Error
 	if err != nil {
@@ -83,7 +81,6 @@
 	f := new(Folder)
 	f.ID = targetID
 	path := ""
-	//拿到此文件的对象和父一级的对象
 	err := db.Preload("ParentF").Preload(clause.Associations).First(f).Error
 	if err != nil {
 		log.Println(err)
@@ -94,7 +91,6 @@
 	head := f
 	for {
 		fmt.Println("path", path)
-		//遍历获取父一级的对象
 		err = db.Preload("ParentF").Preload(clause.Associations).First(head).Error
 		if err != nil {
 			log.Println(err)
